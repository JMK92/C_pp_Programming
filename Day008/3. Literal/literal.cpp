/*
	리터럴(Literal) : 상수
	- 숫자 상수
		- 정수형 상수 : 10진수(0~9), 2진수(0, 1), 8진수(0~7), 
		                16진수(0~9, A, B, C, D, E, F)
						100(10진수), 0b100(2진수), 0100(8진수), 0x100(16진수)
						정수 기본형 : int
		- 실수형 상수 : 소숫점이하 여섯자리까지 표현
						4.2f, 4.2-> 기본형 double

		< 메모리 공간 차지 >          
		                    명시적인 형변환 - 데이터 손실O - Casting(무엇으로 바꿀지 명시 해줘야 한다)
		<-----------------------------------------------------------------------
		Char(1) < short(2) < int(4) < long(4), longlong(8) < float(4) < double(8)
		---------------------------------------------------------------------->
							묵시적인 형변환 - 데이터 손실X

		- 왜 longlong이 float보다 메모리 공간 차지가 적을까?
		   예) 123.5 -> 123과 5를 저장하는 공간이 다름 123은 long이고 5는 float, double에 저장
	
	- 문자상수 : 'A' , '1' -> 문자
	- 문자열상수 : "KOREA", "2021"

	변수(Variable) : 상수가 저장되는 공간을 의미, 기억공간
	- 정수형 변수
	- 실수형 변수
	- 문자형 변수
	- 문자열 변수를 표현하기 위해 배열을 사용한다.
	  char a = 'A';
	  char b = 'B';
	  char c = 'C';
	  char x[3] = {'A', 'B', 'C'};
	  char y[4] = 'ABC' : 반드시 1개 더 큰 공간 설정(null string, \0)
	  - 간접 주소 방식
	  - 직접 주소 방식

	데이터타입(Data Type) : 자료형
	- 변수와 상수의 크기를 규정해 놓은 예약어
	- 기본자료형과 사용자정의 자료형
	- 기본자료형 : 정수형 : char(1), short(2), int(4), long(4), longlong(8) ...
				   실수형 : float(4), double(8), long double(8) 
				   문자형 : char(1) = ASCII 코드 - 통신(7bits)
							A(65)-Z(90), a(97)-z(122) -> 정수값을 나타낸다.
*/